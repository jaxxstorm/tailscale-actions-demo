name: Rollback Product

permissions:
  id-token: write
  contents: read

on:
  workflow_dispatch:

jobs:
  rollback-product:
    name: Run Product Rollback Migration
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Configure Tailscale Credentials
        id: tailscale-auth
        uses: jaxxstorm/configure-tailscale-credentials@main
        with:
          audience: ${{ secrets.TS_AUDIENCE }}
          client-id: ${{ secrets.TS_CLIENT_ID }}
          tailnet: ${{ secrets.TS_TAILNET }}
          tags: tag:ci

      - name: Connect to Tailscale
        uses: tailscale/github-action@v4.0.2
        with:
          oauth-client-id: ${{ steps.tailscale-auth.outputs.ts-oauth-client-id }}
          oauth-secret: ${{ steps.tailscale-auth.outputs.ts-oauth-client-secret }}
          tags: tag:ci

      - name: Install golang-migrate
        uses: jaxxstorm/action-install-gh-release@v2.1.0
        with:
          repo: golang-migrate/migrate
          tag: v4.17.0
          cache: enable

      - name: Rollback to version 1
        env:
          DB_HOST: ${{ secrets.DB_HOST }}
          DB_USER: ${{ secrets.DB_USER }}
          DB_PASSWORD: ${{ secrets.DB_PASSWORD }}
          DB_NAME: ${{ secrets.DB_NAME }}
        run: |
          # URL encode the password to handle special characters
          ENCODED_PASSWORD=$(printf %s "$DB_PASSWORD" | jq -sRr @uri)
          DB_URL="postgres://${DB_USER}:${ENCODED_PASSWORD}@${DB_HOST}:5432/${DB_NAME}?sslmode=require"
          # Rollback to version 1 (removes CI/CD product)
          migrate -path app/migrations -database "$DB_URL" goto 1
          echo "âœ… Rolled back to version 1 - CI/CD product removed!"
